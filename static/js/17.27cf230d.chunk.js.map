{"version":3,"sources":["app/dashboard/Dashboard.js"],"names":["Dashboard","props","handleChange","date","setState","startDate","state","Date","visitSaleData","visitSaleOptions","scales","yAxes","ticks","beginAtZero","display","min","stepSize","max","gridLines","drawBorder","color","zeroLineColor","xAxes","padding","fontColor","autoSkip","categoryPercentage","barPercentage","legend","elements","point","radius","trafficData","trafficOptions","responsive","animation","animateScale","animateRotate","todos","id","task","isCompleted","inputValue","statusChangedHandler","bind","addTodo","removeTodo","inputChangeHandler","event","todo","this","target","checked","preventDefault","unshift","length","index","splice","value","document","querySelector","classList","toggle","setInterval","onAuthStateChanged","auth","user","uid","window","location","href","className","onClick","console","log","currentUser","Component"],"mappings":"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","file":"static/js/17.27cf230d.chunk.js","sourcesContent":["import React, { Component, useEffect } from 'react';\nimport { ProgressBar } from 'react-bootstrap';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport DatePicker from \"react-datepicker\";\nimport { auth } from '../firebase';\nimport { onAuthStateChanged } from 'firebase/auth';\n\n\n// import \"react-datepicker/dist/react-datepicker.css\";\n\n\n\nexport class Dashboard extends Component {\n  handleChange = date => {\n    this.setState({\n      startDate: date\n    });\n  };\n  constructor(props) {\n    super(props)\n    this.state = {\n      startDate: new Date(),\n      visitSaleData: {},\n      visitSaleOptions: {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              display: false,\n              min: 0,\n              stepSize: 20,\n              max: 80\n            },\n            gridLines: {\n              drawBorder: false,\n              color: 'rgba(235,237,242,1)',\n              zeroLineColor: 'rgba(235,237,242,1)'\n            }\n          }],\n          xAxes: [{\n            gridLines: {\n              display: false,\n              drawBorder: false,\n              color: 'rgba(0,0,0,1)',\n              zeroLineColor: 'rgba(235,237,242,1)'\n            },\n            ticks: {\n              padding: 20,\n              fontColor: \"#9c9fa6\",\n              autoSkip: true,\n            },\n            categoryPercentage: 0.5,\n            barPercentage: 0.5\n          }]\n        },\n        legend: {\n          display: false,\n        },\n        elements: {\n          point: {\n            radius: 0\n          }\n        }\n      },\n      trafficData: {},\n      trafficOptions: {\n        responsive: true,\n        animation: {\n          animateScale: true,\n          animateRotate: true\n        },\n        legend: false,\n      },\n      todos: [\n        {\n          id: 1,\n          task: 'Plan Your Campaings',\n          isCompleted: false\n        },\n      ],\n      inputValue: '',\n    }\n    this.statusChangedHandler = this.statusChangedHandler.bind(this);\n    this.addTodo = this.addTodo.bind(this);\n    this.removeTodo = this.removeTodo.bind(this);\n    this.inputChangeHandler = this.inputChangeHandler.bind(this);\n  }\n  statusChangedHandler(event, id) {\n\n    //const todoIndex = this.state.todos.findIndex( t => t.id === id );\n    const todo = { ...this.state.todos[id] };\n    todo.isCompleted = event.target.checked;\n\n    const todos = [...this.state.todos];\n    todos[id] = todo;\n\n    this.setState({\n      todos: todos\n    })\n  }\n\n  addTodo(event) {\n    event.preventDefault();\n\n    const todos = [...this.state.todos];\n    todos.unshift({\n      id: todos.length ? todos[todos.length - 1].id + 1 : 1,\n      task: this.state.inputValue,\n      isCompleted: false\n\n    })\n\n    this.setState({\n      todos: todos,\n      inputValue: ''\n    })\n  }\n\n  removeTodo(index) {\n    const todos = [...this.state.todos];\n    todos.splice(index, 1);\n\n    this.setState({\n      todos: todos\n    })\n  }\n\n  inputChangeHandler(event) {\n    this.setState({\n      inputValue: event.target.value\n    });\n  }\n\n  // componentDidMount() {\n  //   //your code\n  //   var ctx = document.getElementById('visitSaleChart').getContext(\"2d\")\n  //   var gradientBar1 = ctx.createLinearGradient(0, 0, 0, 181)\n  //   gradientBar1.addColorStop(0, 'rgba(218, 140, 255, 1)')\n  //   gradientBar1.addColorStop(1, 'rgba(154, 85, 255, 1)')\n\n  //   var gradientBar2 = ctx.createLinearGradient(0, 0, 0, 360)\n  //   gradientBar2.addColorStop(0, 'rgba(54, 215, 232, 1)')\n  //   gradientBar2.addColorStop(1, 'rgba(177, 148, 250, 1)')\n\n  //   var gradientBar3 = ctx.createLinearGradient(0, 0, 0, 300)\n  //   gradientBar3.addColorStop(0, 'rgba(255, 191, 150, 1)')\n  //   gradientBar3.addColorStop(1, 'rgba(254, 112, 150, 1)')\n\n  //   var gradientdonut1 = ctx.createLinearGradient(0, 0, 0, 181)\n  //   gradientdonut1.addColorStop(0, 'rgba(54, 215, 232, 1)')\n  //   gradientdonut1.addColorStop(1, 'rgba(177, 148, 250, 1)')\n\n  //   var gradientdonut2 = ctx.createLinearGradient(0, 0, 0, 50)\n  //   gradientdonut2.addColorStop(0, 'rgba(6, 185, 157, 1)')\n  //   gradientdonut2.addColorStop(1, 'rgba(132, 217, 210, 1)')\n\n  //   var gradientdonut3 = ctx.createLinearGradient(0, 0, 0, 300)\n  //   gradientdonut3.addColorStop(0, 'rgba(254, 124, 150, 1)')\n  //   gradientdonut3.addColorStop(1, 'rgba(255, 205, 150, 1)')\n\n\n\n  //   const newVisitSaleData = {\n  //     labels: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG'],\n  //     datasets: [\n  //       {\n  //         label: \"CHN\",\n  //         borderColor: gradientBar1,\n  //         backgroundColor: gradientBar1,\n  //         hoverBackgroundColor: gradientBar1,\n  //         legendColor: gradientBar1,\n  //         pointRadius: 0,\n  //         fill: false,\n  //         borderWidth: 1,\n  //         data: [20, 40, 15, 35, 25, 50, 30, 20]\n  //       },\n  //       {\n  //         label: \"USA\",\n  //         borderColor: gradientBar2,\n  //         backgroundColor: gradientBar2,\n  //         hoverBackgroundColor: gradientBar2,\n  //         legendColor: gradientBar2,\n  //         pointRadius: 0,\n  //         fill: false,\n  //         borderWidth: 1,\n  //         data: [40, 30, 20, 10, 50, 15, 35, 40]\n  //       },\n  //       {\n  //         label: \"UK\",\n  //         borderColor: gradientBar3,\n  //         backgroundColor: gradientBar3,\n  //         hoverBackgroundColor: gradientBar3,\n  //         legendColor: gradientBar3,\n  //         pointRadius: 0,\n  //         fill: false,\n  //         borderWidth: 1,\n  //         data: [70, 10, 30, 40, 25, 50, 15, 30]\n  //       }\n  //     ]\n  //   }\n  //   const newTrafficData = {\n  //     datasets: [{\n  //       data: [30, 30, 40],\n  //       backgroundColor: [\n  //         gradientdonut1,\n  //         gradientdonut2,\n  //         gradientdonut3\n  //       ],\n  //       hoverBackgroundColor: [\n  //         gradientdonut1,\n  //         gradientdonut2,\n  //         gradientdonut3\n  //       ],\n  //       borderColor: [\n  //         gradientdonut1,\n  //         gradientdonut2,\n  //         gradientdonut3\n  //       ],\n  //       legendColor: [\n  //         gradientdonut1,\n  //         gradientdonut2,\n  //         gradientdonut3\n  //       ]\n  //     }],\n\n  //     // These labels appear in the legend and in the tooltips when hovering different arcs\n  //     labels: [\n  //       'Search Engines',\n  //       'Direct Click',\n  //       'Bookmarks Click',\n  //     ]\n  //   };\n  //   this.setState({ visitSaleData: newVisitSaleData, trafficData: newTrafficData })\n  // }\n\n\n\n  toggleProBanner() {\n    document.querySelector('.proBanner').classList.toggle(\"hide\");\n  }\n\n  render() {\n    const manageuser = () => {\n\n      onAuthStateChanged(auth, (user) => {\n        if (user) {\n          // User is signed in, see docs for a list of available properties\n          // https://firebase.google.com/docs/reference/js/firebase.User\n          const uid = user.uid;\n          // window.location.href = \"/dashboard\";\n          // ...\n        } else {\n          // User is signed out\n          // <Redirect to={\"/\"} />\n          window.location.href = \"/\";\n          // ...\n        }\n      });\n    }\n\n    setInterval(() => manageuser(), 1000);\n    return (\n      <div>\n        {/* <div className=\"proBanner\">\n          <div>\n            <span className=\"d-flex align-items-center purchase-popup\">\n              <p>Get tons of UI components, Plugins, multiple layouts, 20+ sample pages, and more!</p>\n              <a href=\"https://www.bootstrapdash.com/product/purple-react/?utm_source=organic&utm_medium=banner&utm_campaign=free-preview\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"btn btn-sm purchase-button ml-auto\">Check Pro Version</a>\n              <i className=\"mdi mdi-close bannerClose\" onClick={this.toggleProBanner}></i>\n            </span>\n          </div>\n        </div> */}\n        <div className=\"page-header\">\n          <h3 className=\"page-title\">\n            <span onClick={() => console.log(auth.currentUser)} className=\"page-title-icon bg-gradient-primary text-white mr-2\">\n              <i className=\"mdi mdi-home\"></i>\n            </span> Overview </h3>\n          {/* <nav aria-label=\"breadcrumb\">\n            <ul className=\"breadcrumb\">\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                <span></span>Overview <i className=\"mdi mdi-alert-circle-outline icon-sm text-primary align-middle\"></i>\n              </li>\n            </ul>\n          </nav> */}\n        </div>\n        {/* <div className=\"row\">\n          <div className=\"col-md-4 stretch-card grid-margin\">\n            <div className=\"card bg-gradient-danger card-img-holder text-white\">\n              <div className=\"card-body\">\n                <img src={require(\"../../assets/images/dashboard/circle.svg\")} className=\"card-img-absolute\" alt=\"circle\" />\n                <h4 className=\"font-weight-normal mb-3\">Weekly Sales <i className=\"mdi mdi-chart-line mdi-24px float-right\"></i>\n                </h4>\n                <h2 className=\"mb-5\">$ 15,0000</h2>\n                <h6 className=\"card-text\">Increased by 60%</h6>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-4 stretch-card grid-margin\">\n            <div className=\"card bg-gradient-info card-img-holder text-white\">\n              <div className=\"card-body\">\n                <img src={require(\"../../assets/images/dashboard/circle.svg\")} className=\"card-img-absolute\" alt=\"circle\" />\n                <h4 className=\"font-weight-normal mb-3\">Weekly Orders <i className=\"mdi mdi-bookmark-outline mdi-24px float-right\"></i>\n                </h4>\n                <h2 className=\"mb-5\">45,6334</h2>\n                <h6 className=\"card-text\">Decreased by 10%</h6>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-4 stretch-card grid-margin\">\n            <div className=\"card bg-gradient-success card-img-holder text-white\">\n              <div className=\"card-body\">\n                <img src={require(\"../../assets/images/dashboard/circle.svg\")} className=\"card-img-absolute\" alt=\"circle\" />\n                <h4 className=\"font-weight-normal mb-3\">Visitors Online <i className=\"mdi mdi-diamond mdi-24px float-right\"></i>\n                </h4>\n                <h2 className=\"mb-5\">95,5741</h2>\n                <h6 className=\"card-text\">Increased by 5%</h6>\n              </div>\n            </div>\n          </div>\n        </div> */}\n        <div className=\"row\">\n          <div className=\"col-md-7 grid-margin stretch-card\">\n            {/* <div className=\"card\">\n              <div className=\"card-body\">\n                <div className=\"clearfix mb-4\">\n                  <h4 className=\"card-title float-left\">Visit And Sales Statistics</h4>\n                  <div id=\"visit-sale-chart-legend\" className=\"rounded-legend legend-horizontal legend-top-right float-right\">\n                    <ul>\n                      <li>\n                        <span className=\"legend-dots bg-primary\">\n                        </span>CHN\n                      </li>\n                      <li>\n                        <span className=\"legend-dots bg-danger\">\n                        </span>USA\n                      </li>\n                      <li>\n                        <span className=\"legend-dots bg-info\">\n                        </span>UK\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n                <Bar ref='chart' className=\"chartLegendContainer\" data={this.state.visitSaleData} options={this.state.visitSaleOptions} id=\"visitSaleChart\" />\n              </div>\n            </div> */}\n          </div>\n          <div className=\"col-md-5 grid-margin stretch-card\">\n            {/* <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Traffic Sources</h4>\n                <Doughnut data={this.state.trafficData} options={this.state.trafficOptions} />\n                <div id=\"traffic-chart-legend\" className=\"rounded-legend legend-vertical legend-bottom-left pt-4\">\n                  <ul>\n                    <li>\n                      <span className=\"legend-dots bg-info\"></span>Search Engines\n                      <span className=\"float-right\">30%</span>\n                    </li>\n                    <li>\n                      <span className=\"legend-dots bg-success\"></span>Direct Click\n                      <span className=\"float-right\">30%</span>\n                    </li>\n                    <li>\n                      <span className=\"legend-dots bg-danger\"></span>Bookmarks Click\n                      <span className=\"float-right\">40%</span>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div> */}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 grid-margin\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Insertion Table</h4>\n                <div className=\"table-responsive\">\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th> Insertion order </th>\n                        <th> Pacing </th>\n                        <th> Budget </th>\n                        <th> Flight budget </th>\n                        <th> Days Left </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>\n                          Carx_Aug Campaign {\"(ID: 52611425)\"} <br />\n                          <span className=\"insertion_link\">Crax_SongLiv_20 Sec video_Sep {\"(ID: 52611425)\"}</span></td>\n                        <td> -- </td>\n                        <td>\n                          --\n                        </td>\n                        <td> 4,400.000 impr </td>\n                        <td> 29 </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          Carx_Aug Campaign {\"(ID: 52611425)\"} <br />\n                          <span className=\"insertion_link\">Crax_Gaming_20 Sec video_Sep {\"(ID: 10090303453)\"}</span></td>\n                        <td> -- </td>\n                        <td>\n                          --\n                        </td>\n                        <td> 5,087.000 impr </td>\n                        <td> 29 </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          Carx_Aug Campaign {\"(ID: 52611425)\"} <br />\n                          <span className=\"insertion_link\">Crax_SongLiv_20 Sec video_Sep {\"(ID: 100869318)\"}</span></td>\n                        <td> -- </td>\n                        <td>\n                          --\n                        </td>\n                        <td> 4,400.000 impr </td>\n                        <td> 29 </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          Carx_Aug Campaign {\"(ID: 52611425)\"} <br />\n                          <span className=\"insertion_link\">Crax_SongLiv_20 Sec video {\"(GIF 2)\"} {\"(ID: 1008349391)\"}</span></td>\n                        <td> -- </td>\n                        <td>\n                          --\n                        </td>\n                        <td> -- </td>\n                        <td> -- </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          {/* <div className=\"col-lg-5 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body p-0 d-flex\">\n                <div className=\"dashboard-custom-date-picker\">\n                  <DatePicker inline selected={this.state.startDate}  onChange={this.handleChange}/>\n                </div>\n              </div>\n            </div>\n          </div> */}\n          {/* <div className=\"col-lg-7 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Recent Updates</h4>\n                <div className=\"d-flex\">\n                  <div className=\"d-flex align-items-center mr-4 text-muted font-weight-light\">\n                    <i className=\"mdi mdi-account-outline icon-sm mr-2\"></i>\n                    <span>jack Menqu</span>\n                  </div>\n                  <div className=\"d-flex align-items-center text-muted font-weight-light\">\n                    <i className=\"mdi mdi-clock icon-sm mr-2\"></i>\n                    <span>October 3rd, 2018</span>\n                  </div>\n                </div>\n                <div className=\"row mt-3\">\n                  <div className=\"col-6 pr-1\">\n                    <img src={require(\"../../assets/images/dashboard/img_1.jpg\")} className=\"mb-2 mw-100 w-100 rounded\" alt=\"face\" />\n                    <img src={require(\"../../assets/images/dashboard/img_4.jpg\")} className=\"mw-100 w-100 rounded\" alt=\"face\" />\n                  </div>\n                  <div className=\"col-6 pl-1\">\n                    <img src={require(\"../../assets/images/dashboard/img_2.jpg\")} className=\"mb-2 mw-100 w-100 rounded\" alt=\"face\" />\n                    <img src={require(\"../../assets/images/dashboard/img_3.jpg\")} className=\"mw-100 w-100 rounded\" alt=\"face \"/>\n                  </div>\n                </div>\n                <div className=\"d-flex mt-5 align-items-start\">\n                  <img src={require(\"../../assets/images/faces/face3.jpg\")} className=\"img-sm rounded-circle mr-3\" alt=\"face\" />\n                  <div className=\"mb-0 flex-grow\">\n                    <h5 className=\"mr-2 mb-2\">School Website - Authentication Module.</h5>\n                    <p className=\"mb-0 font-weight-light\">It is a long established fact that a reader will be distracted by the readable content of a page.</p>\n                  </div>\n                  <div className=\"ml-auto\">\n                    <i className=\"mdi mdi-heart-outline text-muted\"></i>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div> */}\n        </div>\n        <div className=\"row\">\n          {/* <div className=\"col-xl-7 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Project Status</h4>\n                <div className=\"table-responsive\">\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th> # </th>\n                        <th> Name </th>\n                        <th> Due Date </th>\n                        <th> Progress </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td> 1 </td>\n                        <td> Herman Beck </td>\n                        <td> May 15, 2015 </td>\n                        <td>\n                          <ProgressBar variant=\"gradient-success\" now={25}/>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td> 2 </td>\n                        <td> Messsy Adam </td>\n                        <td> Jul 01, 2015 </td>\n                        <td>\n                        <ProgressBar variant=\"gradient-danger\" now={75}/>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td> 3 </td>\n                        <td> John Richards </td>\n                        <td> Apr 12, 2015 </td>\n                        <td>\n                        <ProgressBar variant=\"gradient-warning\" now={90}/>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td> 4 </td>\n                        <td> Peter Meggik </td>\n                        <td> May 15, 2015 </td>\n                        <td>\n                        <ProgressBar variant=\"gradient-primary\" now={50}/>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td> 5 </td>\n                        <td> Edward </td>\n                        <td> May 03, 2015 </td>\n                        <td>\n                        <ProgressBar variant=\"gradient-danger\" now={50}/>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td> 5 </td>\n                        <td> Ronald </td>\n                        <td> Jun 05, 2015 </td>\n                        <td>\n                        <ProgressBar variant=\"gradient-info\" now={65}/>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div> */}\n          {/* <div className=\"col-xl-5 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title text-white\">Todo</h4>\n                <form className=\"add-items d-flex\" onSubmit={this.addTodo}>\n                  <input\n                    type=\"text\"\n                    className=\"form-control h-auto\"\n                    placeholder=\"What do you need to do today?\"\n                    value={this.state.inputValue}\n                    onChange={this.inputChangeHandler}\n                    required />\n                  <button type=\"submit\" className=\"btn btn-gradient-primary font-weight-bold px-lg-4 px-3\">Add</button>\n                </form>\n                <div className=\"list-wrapper\">\n                  <ul className=\"d-flex flex-column todo-list\">\n                    {this.state.todos.map((todo, index) => {\n                      return <ListItem\n                        isCompleted={todo.isCompleted}\n                        changed={(event) => this.statusChangedHandler(event, index)}\n                        key={todo.id}\n                        remove={() => this.removeTodo(index)}\n                      >{todo.task}</ListItem>\n                    })}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div> */}\n        </div>\n      </div>\n    );\n  }\n}\nconst ListItem = (props) => {\n\n  return (\n    <li className={(props.isCompleted ? 'completed' : null)}>\n      <div className=\"form-check\">\n        <label htmlFor=\"\" className=\"form-check-label\">\n          <input className=\"checkbox\" type=\"checkbox\"\n            checked={props.isCompleted}\n            onChange={props.changed}\n          /> {props.children} <i className=\"input-helper\"></i>\n        </label>\n      </div>\n      <i className=\"remove mdi mdi-close-circle-outline\" onClick={props.remove}></i>\n    </li>\n  )\n};\nexport default Dashboard;"],"sourceRoot":""}